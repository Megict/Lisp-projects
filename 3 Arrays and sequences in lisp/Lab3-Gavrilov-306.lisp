(defun spiral (sz)  
  (let ((arr ( make-array (list sz sz))) (s sz) (gc 1))
    ;; вправо вниз влево
    (dotimes (x s)
      (setf (aref arr 0 x) gc)
      (setf gc (1+ gc)))
    (setf gc (1- gc))
    (dotimes (x s)
      (setf (aref arr x (- s 1)) gc)
      (setf gc (1+ gc)))
    (setf gc (1- gc))
    (dotimes (x s)
      (setf (aref arr (- s 1) (- (- s x) 1)) gc)
      (setf gc (1+ gc)))
    (setf gc (1- gc))
    
    (dotimes (y (floor s 2))
      ;;вверх вправо
      (setf s (1- s))
      (dotimes (x s)
        (setf (aref arr (+ (- s x) y) y) gc)
        (setf gc (1+ gc)))
      (setf gc (1- gc))
      (dotimes (x s)
        (setf (aref arr (+ y 1) (+ x y)) gc)
        (setf gc (1+ gc)))
      (setf gc (1- gc))
      
      (if (> (- s 2) 0)
        ;;вниз влево
        (progn (setf s (1- s))
        (dotimes (x s)
          (setf (aref arr (+ (+ x 1) y) (+ s y)) gc)
          (setf gc (1+ gc)))
        (setf gc (1- gc))
        (dotimes (x s)
          (setf (aref arr (+ s y) (+ (- s x) y)) gc)
          (setf gc (1+ gc)))
        (setf gc (1- gc))))) 
    arr))